name: Test and Deploy on Raspberry PI 3B

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy and Test on Raspberry Pi
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          ssh -p 8022 -o StrictHostKeyChecking=no dgornostaev@178.218.58.175 << 'EOF'
            cd /home/dgornostaev/flask-rest-api-v1

            echo "Pulling latest changes and building Docker containers..."
            docker compose down
            docker compose up -d --build

            echo "Waiting for containers to be fully operational..."
            sleep 10

            echo "Checking if Flask application container is running..."
            docker-compose ps | grep web || (echo "Flask container failed to start!" && exit 1)

            echo "Checking if DATABASE_URL is accessible inside the web container..."
            docker-compose exec web python -c """
import os
import psycopg2
try:
    conn = psycopg2.connect(os.getenv('DATABASE_URL'))
    print('Database connection successful.')
    conn.close()
except Exception as e:
    print(f'Database connection failed: {e}')
    exit(1)
""" || (echo "Database connection failed!" && exit 1)

            echo "Running tests inside the Flask application container..."
            docker-compose exec web pytest tests --verbose --disable-warnings || (echo "Tests failed!" && exit 1)

            echo "Tests completed successfully!"
          EOF
