services:
  # Auth Service
  auth_service:
    build:
      context: /home/dgornostaev/flask-auth-jwt
      dockerfile: Dockerfile
    image: auth-service
    environment:
      - TZ=Europe/Moscow
    ports:
      - "5001:5001"
    depends_on:
      - db
    restart: always
    networks:
      - backend_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"      # Max log size - 10 MB
        max-file: "3"        # Max log files amount

  # Flask API Service
  web:
    build:
      context: /home/dgornostaev/flask-rest-api-v1
      dockerfile: Dockerfile
    image: customer-api-v1
    environment:
      - TZ=Europe/Moscow
    ports:
      - "5000:5000"
    depends_on:
      - db
    restart: always
    networks:
      - backend_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Postgres Database
  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Gl00m88
      - POSTGRES_DB=postgres
      - TZ=Europe/Moscow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - backend_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  # Redis Service
  redis:
    image: redis:7.0
    environment:
      - TZ=Europe/Moscow
    ports:
      - "3600:6379"  # Open port 3600 for external access
    restart: always
    networks:
      - backend_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
# Nginx Proxy Service
  nginx:
    image: nginx:latest
    environment:
      - TZ=Europe/Moscow
    ports:
      - "80:80"  # Nginx listens on port 80 for HTTP traffic
      - "443:443" # for ssl-certs
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Map custom Nginx config
    depends_on:
      - auth_service
      - web
    networks:
      - backend_network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
# Prometheus service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro  # Configuration file mount point
      - prometheus_data:/prometheus  # for Prometheus data
    restart: unless-stopped  # automatic container restart
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backend_network
#      - monitoring
volumes:
  postgres_data:
  prometheus_data:
    driver: local

networks:
  backend_network:
    driver: bridge
#  monitoring:
#    driver: bridge
